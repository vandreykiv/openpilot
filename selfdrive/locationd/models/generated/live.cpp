#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4341031410396474634) {
   out_4341031410396474634[0] = 0;
   out_4341031410396474634[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4341031410396474634[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4341031410396474634[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4341031410396474634[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4341031410396474634[5] = -sin(in_vec[1]);
   out_4341031410396474634[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4341031410396474634[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4341031410396474634[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4341031410396474634[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4341031410396474634[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4341031410396474634[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4341031410396474634[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4341031410396474634[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4341031410396474634[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4341031410396474634[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4341031410396474634[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4341031410396474634[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4797538582936705820) {
   out_4797538582936705820[0] = delta_x[0] + nom_x[0];
   out_4797538582936705820[1] = delta_x[1] + nom_x[1];
   out_4797538582936705820[2] = delta_x[2] + nom_x[2];
   out_4797538582936705820[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4797538582936705820[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4797538582936705820[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4797538582936705820[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4797538582936705820[7] = delta_x[6] + nom_x[7];
   out_4797538582936705820[8] = delta_x[7] + nom_x[8];
   out_4797538582936705820[9] = delta_x[8] + nom_x[9];
   out_4797538582936705820[10] = delta_x[9] + nom_x[10];
   out_4797538582936705820[11] = delta_x[10] + nom_x[11];
   out_4797538582936705820[12] = delta_x[11] + nom_x[12];
   out_4797538582936705820[13] = delta_x[12] + nom_x[13];
   out_4797538582936705820[14] = delta_x[13] + nom_x[14];
   out_4797538582936705820[15] = delta_x[14] + nom_x[15];
   out_4797538582936705820[16] = delta_x[15] + nom_x[16];
   out_4797538582936705820[17] = delta_x[16] + nom_x[17];
   out_4797538582936705820[18] = delta_x[17] + nom_x[18];
   out_4797538582936705820[19] = delta_x[18] + nom_x[19];
   out_4797538582936705820[20] = delta_x[19] + nom_x[20];
   out_4797538582936705820[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8826134262153630586) {
   out_8826134262153630586[0] = -nom_x[0] + true_x[0];
   out_8826134262153630586[1] = -nom_x[1] + true_x[1];
   out_8826134262153630586[2] = -nom_x[2] + true_x[2];
   out_8826134262153630586[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8826134262153630586[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8826134262153630586[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8826134262153630586[6] = -nom_x[7] + true_x[7];
   out_8826134262153630586[7] = -nom_x[8] + true_x[8];
   out_8826134262153630586[8] = -nom_x[9] + true_x[9];
   out_8826134262153630586[9] = -nom_x[10] + true_x[10];
   out_8826134262153630586[10] = -nom_x[11] + true_x[11];
   out_8826134262153630586[11] = -nom_x[12] + true_x[12];
   out_8826134262153630586[12] = -nom_x[13] + true_x[13];
   out_8826134262153630586[13] = -nom_x[14] + true_x[14];
   out_8826134262153630586[14] = -nom_x[15] + true_x[15];
   out_8826134262153630586[15] = -nom_x[16] + true_x[16];
   out_8826134262153630586[16] = -nom_x[17] + true_x[17];
   out_8826134262153630586[17] = -nom_x[18] + true_x[18];
   out_8826134262153630586[18] = -nom_x[19] + true_x[19];
   out_8826134262153630586[19] = -nom_x[20] + true_x[20];
   out_8826134262153630586[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6756890915510285479) {
   out_6756890915510285479[0] = 1.0;
   out_6756890915510285479[1] = 0;
   out_6756890915510285479[2] = 0;
   out_6756890915510285479[3] = 0;
   out_6756890915510285479[4] = 0;
   out_6756890915510285479[5] = 0;
   out_6756890915510285479[6] = 0;
   out_6756890915510285479[7] = 0;
   out_6756890915510285479[8] = 0;
   out_6756890915510285479[9] = 0;
   out_6756890915510285479[10] = 0;
   out_6756890915510285479[11] = 0;
   out_6756890915510285479[12] = 0;
   out_6756890915510285479[13] = 0;
   out_6756890915510285479[14] = 0;
   out_6756890915510285479[15] = 0;
   out_6756890915510285479[16] = 0;
   out_6756890915510285479[17] = 0;
   out_6756890915510285479[18] = 0;
   out_6756890915510285479[19] = 0;
   out_6756890915510285479[20] = 0;
   out_6756890915510285479[21] = 0;
   out_6756890915510285479[22] = 1.0;
   out_6756890915510285479[23] = 0;
   out_6756890915510285479[24] = 0;
   out_6756890915510285479[25] = 0;
   out_6756890915510285479[26] = 0;
   out_6756890915510285479[27] = 0;
   out_6756890915510285479[28] = 0;
   out_6756890915510285479[29] = 0;
   out_6756890915510285479[30] = 0;
   out_6756890915510285479[31] = 0;
   out_6756890915510285479[32] = 0;
   out_6756890915510285479[33] = 0;
   out_6756890915510285479[34] = 0;
   out_6756890915510285479[35] = 0;
   out_6756890915510285479[36] = 0;
   out_6756890915510285479[37] = 0;
   out_6756890915510285479[38] = 0;
   out_6756890915510285479[39] = 0;
   out_6756890915510285479[40] = 0;
   out_6756890915510285479[41] = 0;
   out_6756890915510285479[42] = 0;
   out_6756890915510285479[43] = 0;
   out_6756890915510285479[44] = 1.0;
   out_6756890915510285479[45] = 0;
   out_6756890915510285479[46] = 0;
   out_6756890915510285479[47] = 0;
   out_6756890915510285479[48] = 0;
   out_6756890915510285479[49] = 0;
   out_6756890915510285479[50] = 0;
   out_6756890915510285479[51] = 0;
   out_6756890915510285479[52] = 0;
   out_6756890915510285479[53] = 0;
   out_6756890915510285479[54] = 0;
   out_6756890915510285479[55] = 0;
   out_6756890915510285479[56] = 0;
   out_6756890915510285479[57] = 0;
   out_6756890915510285479[58] = 0;
   out_6756890915510285479[59] = 0;
   out_6756890915510285479[60] = 0;
   out_6756890915510285479[61] = 0;
   out_6756890915510285479[62] = 0;
   out_6756890915510285479[63] = 0;
   out_6756890915510285479[64] = 0;
   out_6756890915510285479[65] = 0;
   out_6756890915510285479[66] = -0.5*state[4];
   out_6756890915510285479[67] = -0.5*state[5];
   out_6756890915510285479[68] = -0.5*state[6];
   out_6756890915510285479[69] = 0;
   out_6756890915510285479[70] = 0;
   out_6756890915510285479[71] = 0;
   out_6756890915510285479[72] = 0;
   out_6756890915510285479[73] = 0;
   out_6756890915510285479[74] = 0;
   out_6756890915510285479[75] = 0;
   out_6756890915510285479[76] = 0;
   out_6756890915510285479[77] = 0;
   out_6756890915510285479[78] = 0;
   out_6756890915510285479[79] = 0;
   out_6756890915510285479[80] = 0;
   out_6756890915510285479[81] = 0;
   out_6756890915510285479[82] = 0;
   out_6756890915510285479[83] = 0;
   out_6756890915510285479[84] = 0;
   out_6756890915510285479[85] = 0;
   out_6756890915510285479[86] = 0;
   out_6756890915510285479[87] = 0.5*state[3];
   out_6756890915510285479[88] = 0.5*state[6];
   out_6756890915510285479[89] = -0.5*state[5];
   out_6756890915510285479[90] = 0;
   out_6756890915510285479[91] = 0;
   out_6756890915510285479[92] = 0;
   out_6756890915510285479[93] = 0;
   out_6756890915510285479[94] = 0;
   out_6756890915510285479[95] = 0;
   out_6756890915510285479[96] = 0;
   out_6756890915510285479[97] = 0;
   out_6756890915510285479[98] = 0;
   out_6756890915510285479[99] = 0;
   out_6756890915510285479[100] = 0;
   out_6756890915510285479[101] = 0;
   out_6756890915510285479[102] = 0;
   out_6756890915510285479[103] = 0;
   out_6756890915510285479[104] = 0;
   out_6756890915510285479[105] = 0;
   out_6756890915510285479[106] = 0;
   out_6756890915510285479[107] = 0;
   out_6756890915510285479[108] = -0.5*state[6];
   out_6756890915510285479[109] = 0.5*state[3];
   out_6756890915510285479[110] = 0.5*state[4];
   out_6756890915510285479[111] = 0;
   out_6756890915510285479[112] = 0;
   out_6756890915510285479[113] = 0;
   out_6756890915510285479[114] = 0;
   out_6756890915510285479[115] = 0;
   out_6756890915510285479[116] = 0;
   out_6756890915510285479[117] = 0;
   out_6756890915510285479[118] = 0;
   out_6756890915510285479[119] = 0;
   out_6756890915510285479[120] = 0;
   out_6756890915510285479[121] = 0;
   out_6756890915510285479[122] = 0;
   out_6756890915510285479[123] = 0;
   out_6756890915510285479[124] = 0;
   out_6756890915510285479[125] = 0;
   out_6756890915510285479[126] = 0;
   out_6756890915510285479[127] = 0;
   out_6756890915510285479[128] = 0;
   out_6756890915510285479[129] = 0.5*state[5];
   out_6756890915510285479[130] = -0.5*state[4];
   out_6756890915510285479[131] = 0.5*state[3];
   out_6756890915510285479[132] = 0;
   out_6756890915510285479[133] = 0;
   out_6756890915510285479[134] = 0;
   out_6756890915510285479[135] = 0;
   out_6756890915510285479[136] = 0;
   out_6756890915510285479[137] = 0;
   out_6756890915510285479[138] = 0;
   out_6756890915510285479[139] = 0;
   out_6756890915510285479[140] = 0;
   out_6756890915510285479[141] = 0;
   out_6756890915510285479[142] = 0;
   out_6756890915510285479[143] = 0;
   out_6756890915510285479[144] = 0;
   out_6756890915510285479[145] = 0;
   out_6756890915510285479[146] = 0;
   out_6756890915510285479[147] = 0;
   out_6756890915510285479[148] = 0;
   out_6756890915510285479[149] = 0;
   out_6756890915510285479[150] = 0;
   out_6756890915510285479[151] = 0;
   out_6756890915510285479[152] = 0;
   out_6756890915510285479[153] = 1.0;
   out_6756890915510285479[154] = 0;
   out_6756890915510285479[155] = 0;
   out_6756890915510285479[156] = 0;
   out_6756890915510285479[157] = 0;
   out_6756890915510285479[158] = 0;
   out_6756890915510285479[159] = 0;
   out_6756890915510285479[160] = 0;
   out_6756890915510285479[161] = 0;
   out_6756890915510285479[162] = 0;
   out_6756890915510285479[163] = 0;
   out_6756890915510285479[164] = 0;
   out_6756890915510285479[165] = 0;
   out_6756890915510285479[166] = 0;
   out_6756890915510285479[167] = 0;
   out_6756890915510285479[168] = 0;
   out_6756890915510285479[169] = 0;
   out_6756890915510285479[170] = 0;
   out_6756890915510285479[171] = 0;
   out_6756890915510285479[172] = 0;
   out_6756890915510285479[173] = 0;
   out_6756890915510285479[174] = 0;
   out_6756890915510285479[175] = 1.0;
   out_6756890915510285479[176] = 0;
   out_6756890915510285479[177] = 0;
   out_6756890915510285479[178] = 0;
   out_6756890915510285479[179] = 0;
   out_6756890915510285479[180] = 0;
   out_6756890915510285479[181] = 0;
   out_6756890915510285479[182] = 0;
   out_6756890915510285479[183] = 0;
   out_6756890915510285479[184] = 0;
   out_6756890915510285479[185] = 0;
   out_6756890915510285479[186] = 0;
   out_6756890915510285479[187] = 0;
   out_6756890915510285479[188] = 0;
   out_6756890915510285479[189] = 0;
   out_6756890915510285479[190] = 0;
   out_6756890915510285479[191] = 0;
   out_6756890915510285479[192] = 0;
   out_6756890915510285479[193] = 0;
   out_6756890915510285479[194] = 0;
   out_6756890915510285479[195] = 0;
   out_6756890915510285479[196] = 0;
   out_6756890915510285479[197] = 1.0;
   out_6756890915510285479[198] = 0;
   out_6756890915510285479[199] = 0;
   out_6756890915510285479[200] = 0;
   out_6756890915510285479[201] = 0;
   out_6756890915510285479[202] = 0;
   out_6756890915510285479[203] = 0;
   out_6756890915510285479[204] = 0;
   out_6756890915510285479[205] = 0;
   out_6756890915510285479[206] = 0;
   out_6756890915510285479[207] = 0;
   out_6756890915510285479[208] = 0;
   out_6756890915510285479[209] = 0;
   out_6756890915510285479[210] = 0;
   out_6756890915510285479[211] = 0;
   out_6756890915510285479[212] = 0;
   out_6756890915510285479[213] = 0;
   out_6756890915510285479[214] = 0;
   out_6756890915510285479[215] = 0;
   out_6756890915510285479[216] = 0;
   out_6756890915510285479[217] = 0;
   out_6756890915510285479[218] = 0;
   out_6756890915510285479[219] = 1.0;
   out_6756890915510285479[220] = 0;
   out_6756890915510285479[221] = 0;
   out_6756890915510285479[222] = 0;
   out_6756890915510285479[223] = 0;
   out_6756890915510285479[224] = 0;
   out_6756890915510285479[225] = 0;
   out_6756890915510285479[226] = 0;
   out_6756890915510285479[227] = 0;
   out_6756890915510285479[228] = 0;
   out_6756890915510285479[229] = 0;
   out_6756890915510285479[230] = 0;
   out_6756890915510285479[231] = 0;
   out_6756890915510285479[232] = 0;
   out_6756890915510285479[233] = 0;
   out_6756890915510285479[234] = 0;
   out_6756890915510285479[235] = 0;
   out_6756890915510285479[236] = 0;
   out_6756890915510285479[237] = 0;
   out_6756890915510285479[238] = 0;
   out_6756890915510285479[239] = 0;
   out_6756890915510285479[240] = 0;
   out_6756890915510285479[241] = 1.0;
   out_6756890915510285479[242] = 0;
   out_6756890915510285479[243] = 0;
   out_6756890915510285479[244] = 0;
   out_6756890915510285479[245] = 0;
   out_6756890915510285479[246] = 0;
   out_6756890915510285479[247] = 0;
   out_6756890915510285479[248] = 0;
   out_6756890915510285479[249] = 0;
   out_6756890915510285479[250] = 0;
   out_6756890915510285479[251] = 0;
   out_6756890915510285479[252] = 0;
   out_6756890915510285479[253] = 0;
   out_6756890915510285479[254] = 0;
   out_6756890915510285479[255] = 0;
   out_6756890915510285479[256] = 0;
   out_6756890915510285479[257] = 0;
   out_6756890915510285479[258] = 0;
   out_6756890915510285479[259] = 0;
   out_6756890915510285479[260] = 0;
   out_6756890915510285479[261] = 0;
   out_6756890915510285479[262] = 0;
   out_6756890915510285479[263] = 1.0;
   out_6756890915510285479[264] = 0;
   out_6756890915510285479[265] = 0;
   out_6756890915510285479[266] = 0;
   out_6756890915510285479[267] = 0;
   out_6756890915510285479[268] = 0;
   out_6756890915510285479[269] = 0;
   out_6756890915510285479[270] = 0;
   out_6756890915510285479[271] = 0;
   out_6756890915510285479[272] = 0;
   out_6756890915510285479[273] = 0;
   out_6756890915510285479[274] = 0;
   out_6756890915510285479[275] = 0;
   out_6756890915510285479[276] = 0;
   out_6756890915510285479[277] = 0;
   out_6756890915510285479[278] = 0;
   out_6756890915510285479[279] = 0;
   out_6756890915510285479[280] = 0;
   out_6756890915510285479[281] = 0;
   out_6756890915510285479[282] = 0;
   out_6756890915510285479[283] = 0;
   out_6756890915510285479[284] = 0;
   out_6756890915510285479[285] = 1.0;
   out_6756890915510285479[286] = 0;
   out_6756890915510285479[287] = 0;
   out_6756890915510285479[288] = 0;
   out_6756890915510285479[289] = 0;
   out_6756890915510285479[290] = 0;
   out_6756890915510285479[291] = 0;
   out_6756890915510285479[292] = 0;
   out_6756890915510285479[293] = 0;
   out_6756890915510285479[294] = 0;
   out_6756890915510285479[295] = 0;
   out_6756890915510285479[296] = 0;
   out_6756890915510285479[297] = 0;
   out_6756890915510285479[298] = 0;
   out_6756890915510285479[299] = 0;
   out_6756890915510285479[300] = 0;
   out_6756890915510285479[301] = 0;
   out_6756890915510285479[302] = 0;
   out_6756890915510285479[303] = 0;
   out_6756890915510285479[304] = 0;
   out_6756890915510285479[305] = 0;
   out_6756890915510285479[306] = 0;
   out_6756890915510285479[307] = 1.0;
   out_6756890915510285479[308] = 0;
   out_6756890915510285479[309] = 0;
   out_6756890915510285479[310] = 0;
   out_6756890915510285479[311] = 0;
   out_6756890915510285479[312] = 0;
   out_6756890915510285479[313] = 0;
   out_6756890915510285479[314] = 0;
   out_6756890915510285479[315] = 0;
   out_6756890915510285479[316] = 0;
   out_6756890915510285479[317] = 0;
   out_6756890915510285479[318] = 0;
   out_6756890915510285479[319] = 0;
   out_6756890915510285479[320] = 0;
   out_6756890915510285479[321] = 0;
   out_6756890915510285479[322] = 0;
   out_6756890915510285479[323] = 0;
   out_6756890915510285479[324] = 0;
   out_6756890915510285479[325] = 0;
   out_6756890915510285479[326] = 0;
   out_6756890915510285479[327] = 0;
   out_6756890915510285479[328] = 0;
   out_6756890915510285479[329] = 1.0;
   out_6756890915510285479[330] = 0;
   out_6756890915510285479[331] = 0;
   out_6756890915510285479[332] = 0;
   out_6756890915510285479[333] = 0;
   out_6756890915510285479[334] = 0;
   out_6756890915510285479[335] = 0;
   out_6756890915510285479[336] = 0;
   out_6756890915510285479[337] = 0;
   out_6756890915510285479[338] = 0;
   out_6756890915510285479[339] = 0;
   out_6756890915510285479[340] = 0;
   out_6756890915510285479[341] = 0;
   out_6756890915510285479[342] = 0;
   out_6756890915510285479[343] = 0;
   out_6756890915510285479[344] = 0;
   out_6756890915510285479[345] = 0;
   out_6756890915510285479[346] = 0;
   out_6756890915510285479[347] = 0;
   out_6756890915510285479[348] = 0;
   out_6756890915510285479[349] = 0;
   out_6756890915510285479[350] = 0;
   out_6756890915510285479[351] = 1.0;
   out_6756890915510285479[352] = 0;
   out_6756890915510285479[353] = 0;
   out_6756890915510285479[354] = 0;
   out_6756890915510285479[355] = 0;
   out_6756890915510285479[356] = 0;
   out_6756890915510285479[357] = 0;
   out_6756890915510285479[358] = 0;
   out_6756890915510285479[359] = 0;
   out_6756890915510285479[360] = 0;
   out_6756890915510285479[361] = 0;
   out_6756890915510285479[362] = 0;
   out_6756890915510285479[363] = 0;
   out_6756890915510285479[364] = 0;
   out_6756890915510285479[365] = 0;
   out_6756890915510285479[366] = 0;
   out_6756890915510285479[367] = 0;
   out_6756890915510285479[368] = 0;
   out_6756890915510285479[369] = 0;
   out_6756890915510285479[370] = 0;
   out_6756890915510285479[371] = 0;
   out_6756890915510285479[372] = 0;
   out_6756890915510285479[373] = 1.0;
   out_6756890915510285479[374] = 0;
   out_6756890915510285479[375] = 0;
   out_6756890915510285479[376] = 0;
   out_6756890915510285479[377] = 0;
   out_6756890915510285479[378] = 0;
   out_6756890915510285479[379] = 0;
   out_6756890915510285479[380] = 0;
   out_6756890915510285479[381] = 0;
   out_6756890915510285479[382] = 0;
   out_6756890915510285479[383] = 0;
   out_6756890915510285479[384] = 0;
   out_6756890915510285479[385] = 0;
   out_6756890915510285479[386] = 0;
   out_6756890915510285479[387] = 0;
   out_6756890915510285479[388] = 0;
   out_6756890915510285479[389] = 0;
   out_6756890915510285479[390] = 0;
   out_6756890915510285479[391] = 0;
   out_6756890915510285479[392] = 0;
   out_6756890915510285479[393] = 0;
   out_6756890915510285479[394] = 0;
   out_6756890915510285479[395] = 1.0;
   out_6756890915510285479[396] = 0;
   out_6756890915510285479[397] = 0;
   out_6756890915510285479[398] = 0;
   out_6756890915510285479[399] = 0;
   out_6756890915510285479[400] = 0;
   out_6756890915510285479[401] = 0;
   out_6756890915510285479[402] = 0;
   out_6756890915510285479[403] = 0;
   out_6756890915510285479[404] = 0;
   out_6756890915510285479[405] = 0;
   out_6756890915510285479[406] = 0;
   out_6756890915510285479[407] = 0;
   out_6756890915510285479[408] = 0;
   out_6756890915510285479[409] = 0;
   out_6756890915510285479[410] = 0;
   out_6756890915510285479[411] = 0;
   out_6756890915510285479[412] = 0;
   out_6756890915510285479[413] = 0;
   out_6756890915510285479[414] = 0;
   out_6756890915510285479[415] = 0;
   out_6756890915510285479[416] = 0;
   out_6756890915510285479[417] = 1.0;
   out_6756890915510285479[418] = 0;
   out_6756890915510285479[419] = 0;
   out_6756890915510285479[420] = 0;
   out_6756890915510285479[421] = 0;
   out_6756890915510285479[422] = 0;
   out_6756890915510285479[423] = 0;
   out_6756890915510285479[424] = 0;
   out_6756890915510285479[425] = 0;
   out_6756890915510285479[426] = 0;
   out_6756890915510285479[427] = 0;
   out_6756890915510285479[428] = 0;
   out_6756890915510285479[429] = 0;
   out_6756890915510285479[430] = 0;
   out_6756890915510285479[431] = 0;
   out_6756890915510285479[432] = 0;
   out_6756890915510285479[433] = 0;
   out_6756890915510285479[434] = 0;
   out_6756890915510285479[435] = 0;
   out_6756890915510285479[436] = 0;
   out_6756890915510285479[437] = 0;
   out_6756890915510285479[438] = 0;
   out_6756890915510285479[439] = 1.0;
   out_6756890915510285479[440] = 0;
   out_6756890915510285479[441] = 0;
   out_6756890915510285479[442] = 0;
   out_6756890915510285479[443] = 0;
   out_6756890915510285479[444] = 0;
   out_6756890915510285479[445] = 0;
   out_6756890915510285479[446] = 0;
   out_6756890915510285479[447] = 0;
   out_6756890915510285479[448] = 0;
   out_6756890915510285479[449] = 0;
   out_6756890915510285479[450] = 0;
   out_6756890915510285479[451] = 0;
   out_6756890915510285479[452] = 0;
   out_6756890915510285479[453] = 0;
   out_6756890915510285479[454] = 0;
   out_6756890915510285479[455] = 0;
   out_6756890915510285479[456] = 0;
   out_6756890915510285479[457] = 0;
   out_6756890915510285479[458] = 0;
   out_6756890915510285479[459] = 0;
   out_6756890915510285479[460] = 0;
   out_6756890915510285479[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1045568842516687553) {
   out_1045568842516687553[0] = dt*state[7] + state[0];
   out_1045568842516687553[1] = dt*state[8] + state[1];
   out_1045568842516687553[2] = dt*state[9] + state[2];
   out_1045568842516687553[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1045568842516687553[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1045568842516687553[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1045568842516687553[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1045568842516687553[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1045568842516687553[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1045568842516687553[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1045568842516687553[10] = state[10];
   out_1045568842516687553[11] = state[11];
   out_1045568842516687553[12] = state[12];
   out_1045568842516687553[13] = state[13];
   out_1045568842516687553[14] = state[14];
   out_1045568842516687553[15] = state[15];
   out_1045568842516687553[16] = state[16];
   out_1045568842516687553[17] = state[17];
   out_1045568842516687553[18] = state[18];
   out_1045568842516687553[19] = state[19];
   out_1045568842516687553[20] = state[20];
   out_1045568842516687553[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1217235508240824483) {
   out_1217235508240824483[0] = 1;
   out_1217235508240824483[1] = 0;
   out_1217235508240824483[2] = 0;
   out_1217235508240824483[3] = 0;
   out_1217235508240824483[4] = 0;
   out_1217235508240824483[5] = 0;
   out_1217235508240824483[6] = dt;
   out_1217235508240824483[7] = 0;
   out_1217235508240824483[8] = 0;
   out_1217235508240824483[9] = 0;
   out_1217235508240824483[10] = 0;
   out_1217235508240824483[11] = 0;
   out_1217235508240824483[12] = 0;
   out_1217235508240824483[13] = 0;
   out_1217235508240824483[14] = 0;
   out_1217235508240824483[15] = 0;
   out_1217235508240824483[16] = 0;
   out_1217235508240824483[17] = 0;
   out_1217235508240824483[18] = 0;
   out_1217235508240824483[19] = 0;
   out_1217235508240824483[20] = 0;
   out_1217235508240824483[21] = 0;
   out_1217235508240824483[22] = 1;
   out_1217235508240824483[23] = 0;
   out_1217235508240824483[24] = 0;
   out_1217235508240824483[25] = 0;
   out_1217235508240824483[26] = 0;
   out_1217235508240824483[27] = 0;
   out_1217235508240824483[28] = dt;
   out_1217235508240824483[29] = 0;
   out_1217235508240824483[30] = 0;
   out_1217235508240824483[31] = 0;
   out_1217235508240824483[32] = 0;
   out_1217235508240824483[33] = 0;
   out_1217235508240824483[34] = 0;
   out_1217235508240824483[35] = 0;
   out_1217235508240824483[36] = 0;
   out_1217235508240824483[37] = 0;
   out_1217235508240824483[38] = 0;
   out_1217235508240824483[39] = 0;
   out_1217235508240824483[40] = 0;
   out_1217235508240824483[41] = 0;
   out_1217235508240824483[42] = 0;
   out_1217235508240824483[43] = 0;
   out_1217235508240824483[44] = 1;
   out_1217235508240824483[45] = 0;
   out_1217235508240824483[46] = 0;
   out_1217235508240824483[47] = 0;
   out_1217235508240824483[48] = 0;
   out_1217235508240824483[49] = 0;
   out_1217235508240824483[50] = dt;
   out_1217235508240824483[51] = 0;
   out_1217235508240824483[52] = 0;
   out_1217235508240824483[53] = 0;
   out_1217235508240824483[54] = 0;
   out_1217235508240824483[55] = 0;
   out_1217235508240824483[56] = 0;
   out_1217235508240824483[57] = 0;
   out_1217235508240824483[58] = 0;
   out_1217235508240824483[59] = 0;
   out_1217235508240824483[60] = 0;
   out_1217235508240824483[61] = 0;
   out_1217235508240824483[62] = 0;
   out_1217235508240824483[63] = 0;
   out_1217235508240824483[64] = 0;
   out_1217235508240824483[65] = 0;
   out_1217235508240824483[66] = 1;
   out_1217235508240824483[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1217235508240824483[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1217235508240824483[69] = 0;
   out_1217235508240824483[70] = 0;
   out_1217235508240824483[71] = 0;
   out_1217235508240824483[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1217235508240824483[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1217235508240824483[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1217235508240824483[75] = 0;
   out_1217235508240824483[76] = 0;
   out_1217235508240824483[77] = 0;
   out_1217235508240824483[78] = 0;
   out_1217235508240824483[79] = 0;
   out_1217235508240824483[80] = 0;
   out_1217235508240824483[81] = 0;
   out_1217235508240824483[82] = 0;
   out_1217235508240824483[83] = 0;
   out_1217235508240824483[84] = 0;
   out_1217235508240824483[85] = 0;
   out_1217235508240824483[86] = 0;
   out_1217235508240824483[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1217235508240824483[88] = 1;
   out_1217235508240824483[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1217235508240824483[90] = 0;
   out_1217235508240824483[91] = 0;
   out_1217235508240824483[92] = 0;
   out_1217235508240824483[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1217235508240824483[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1217235508240824483[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1217235508240824483[96] = 0;
   out_1217235508240824483[97] = 0;
   out_1217235508240824483[98] = 0;
   out_1217235508240824483[99] = 0;
   out_1217235508240824483[100] = 0;
   out_1217235508240824483[101] = 0;
   out_1217235508240824483[102] = 0;
   out_1217235508240824483[103] = 0;
   out_1217235508240824483[104] = 0;
   out_1217235508240824483[105] = 0;
   out_1217235508240824483[106] = 0;
   out_1217235508240824483[107] = 0;
   out_1217235508240824483[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1217235508240824483[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1217235508240824483[110] = 1;
   out_1217235508240824483[111] = 0;
   out_1217235508240824483[112] = 0;
   out_1217235508240824483[113] = 0;
   out_1217235508240824483[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1217235508240824483[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1217235508240824483[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1217235508240824483[117] = 0;
   out_1217235508240824483[118] = 0;
   out_1217235508240824483[119] = 0;
   out_1217235508240824483[120] = 0;
   out_1217235508240824483[121] = 0;
   out_1217235508240824483[122] = 0;
   out_1217235508240824483[123] = 0;
   out_1217235508240824483[124] = 0;
   out_1217235508240824483[125] = 0;
   out_1217235508240824483[126] = 0;
   out_1217235508240824483[127] = 0;
   out_1217235508240824483[128] = 0;
   out_1217235508240824483[129] = 0;
   out_1217235508240824483[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1217235508240824483[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1217235508240824483[132] = 1;
   out_1217235508240824483[133] = 0;
   out_1217235508240824483[134] = 0;
   out_1217235508240824483[135] = 0;
   out_1217235508240824483[136] = 0;
   out_1217235508240824483[137] = 0;
   out_1217235508240824483[138] = 0;
   out_1217235508240824483[139] = 0;
   out_1217235508240824483[140] = 0;
   out_1217235508240824483[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1217235508240824483[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1217235508240824483[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1217235508240824483[144] = 0;
   out_1217235508240824483[145] = 0;
   out_1217235508240824483[146] = 0;
   out_1217235508240824483[147] = 0;
   out_1217235508240824483[148] = 0;
   out_1217235508240824483[149] = 0;
   out_1217235508240824483[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1217235508240824483[151] = 0;
   out_1217235508240824483[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1217235508240824483[153] = 0;
   out_1217235508240824483[154] = 1;
   out_1217235508240824483[155] = 0;
   out_1217235508240824483[156] = 0;
   out_1217235508240824483[157] = 0;
   out_1217235508240824483[158] = 0;
   out_1217235508240824483[159] = 0;
   out_1217235508240824483[160] = 0;
   out_1217235508240824483[161] = 0;
   out_1217235508240824483[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1217235508240824483[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1217235508240824483[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1217235508240824483[165] = 0;
   out_1217235508240824483[166] = 0;
   out_1217235508240824483[167] = 0;
   out_1217235508240824483[168] = 0;
   out_1217235508240824483[169] = 0;
   out_1217235508240824483[170] = 0;
   out_1217235508240824483[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1217235508240824483[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1217235508240824483[173] = 0;
   out_1217235508240824483[174] = 0;
   out_1217235508240824483[175] = 0;
   out_1217235508240824483[176] = 1;
   out_1217235508240824483[177] = 0;
   out_1217235508240824483[178] = 0;
   out_1217235508240824483[179] = 0;
   out_1217235508240824483[180] = 0;
   out_1217235508240824483[181] = 0;
   out_1217235508240824483[182] = 0;
   out_1217235508240824483[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1217235508240824483[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1217235508240824483[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1217235508240824483[186] = 0;
   out_1217235508240824483[187] = 0;
   out_1217235508240824483[188] = 0;
   out_1217235508240824483[189] = 0;
   out_1217235508240824483[190] = 0;
   out_1217235508240824483[191] = 0;
   out_1217235508240824483[192] = 0;
   out_1217235508240824483[193] = 0;
   out_1217235508240824483[194] = 0;
   out_1217235508240824483[195] = 0;
   out_1217235508240824483[196] = 0;
   out_1217235508240824483[197] = 0;
   out_1217235508240824483[198] = 1;
   out_1217235508240824483[199] = 0;
   out_1217235508240824483[200] = 0;
   out_1217235508240824483[201] = 0;
   out_1217235508240824483[202] = 0;
   out_1217235508240824483[203] = 0;
   out_1217235508240824483[204] = 0;
   out_1217235508240824483[205] = 0;
   out_1217235508240824483[206] = 0;
   out_1217235508240824483[207] = 0;
   out_1217235508240824483[208] = 0;
   out_1217235508240824483[209] = 0;
   out_1217235508240824483[210] = 0;
   out_1217235508240824483[211] = 0;
   out_1217235508240824483[212] = 0;
   out_1217235508240824483[213] = 0;
   out_1217235508240824483[214] = 0;
   out_1217235508240824483[215] = 0;
   out_1217235508240824483[216] = 0;
   out_1217235508240824483[217] = 0;
   out_1217235508240824483[218] = 0;
   out_1217235508240824483[219] = 0;
   out_1217235508240824483[220] = 1;
   out_1217235508240824483[221] = 0;
   out_1217235508240824483[222] = 0;
   out_1217235508240824483[223] = 0;
   out_1217235508240824483[224] = 0;
   out_1217235508240824483[225] = 0;
   out_1217235508240824483[226] = 0;
   out_1217235508240824483[227] = 0;
   out_1217235508240824483[228] = 0;
   out_1217235508240824483[229] = 0;
   out_1217235508240824483[230] = 0;
   out_1217235508240824483[231] = 0;
   out_1217235508240824483[232] = 0;
   out_1217235508240824483[233] = 0;
   out_1217235508240824483[234] = 0;
   out_1217235508240824483[235] = 0;
   out_1217235508240824483[236] = 0;
   out_1217235508240824483[237] = 0;
   out_1217235508240824483[238] = 0;
   out_1217235508240824483[239] = 0;
   out_1217235508240824483[240] = 0;
   out_1217235508240824483[241] = 0;
   out_1217235508240824483[242] = 1;
   out_1217235508240824483[243] = 0;
   out_1217235508240824483[244] = 0;
   out_1217235508240824483[245] = 0;
   out_1217235508240824483[246] = 0;
   out_1217235508240824483[247] = 0;
   out_1217235508240824483[248] = 0;
   out_1217235508240824483[249] = 0;
   out_1217235508240824483[250] = 0;
   out_1217235508240824483[251] = 0;
   out_1217235508240824483[252] = 0;
   out_1217235508240824483[253] = 0;
   out_1217235508240824483[254] = 0;
   out_1217235508240824483[255] = 0;
   out_1217235508240824483[256] = 0;
   out_1217235508240824483[257] = 0;
   out_1217235508240824483[258] = 0;
   out_1217235508240824483[259] = 0;
   out_1217235508240824483[260] = 0;
   out_1217235508240824483[261] = 0;
   out_1217235508240824483[262] = 0;
   out_1217235508240824483[263] = 0;
   out_1217235508240824483[264] = 1;
   out_1217235508240824483[265] = 0;
   out_1217235508240824483[266] = 0;
   out_1217235508240824483[267] = 0;
   out_1217235508240824483[268] = 0;
   out_1217235508240824483[269] = 0;
   out_1217235508240824483[270] = 0;
   out_1217235508240824483[271] = 0;
   out_1217235508240824483[272] = 0;
   out_1217235508240824483[273] = 0;
   out_1217235508240824483[274] = 0;
   out_1217235508240824483[275] = 0;
   out_1217235508240824483[276] = 0;
   out_1217235508240824483[277] = 0;
   out_1217235508240824483[278] = 0;
   out_1217235508240824483[279] = 0;
   out_1217235508240824483[280] = 0;
   out_1217235508240824483[281] = 0;
   out_1217235508240824483[282] = 0;
   out_1217235508240824483[283] = 0;
   out_1217235508240824483[284] = 0;
   out_1217235508240824483[285] = 0;
   out_1217235508240824483[286] = 1;
   out_1217235508240824483[287] = 0;
   out_1217235508240824483[288] = 0;
   out_1217235508240824483[289] = 0;
   out_1217235508240824483[290] = 0;
   out_1217235508240824483[291] = 0;
   out_1217235508240824483[292] = 0;
   out_1217235508240824483[293] = 0;
   out_1217235508240824483[294] = 0;
   out_1217235508240824483[295] = 0;
   out_1217235508240824483[296] = 0;
   out_1217235508240824483[297] = 0;
   out_1217235508240824483[298] = 0;
   out_1217235508240824483[299] = 0;
   out_1217235508240824483[300] = 0;
   out_1217235508240824483[301] = 0;
   out_1217235508240824483[302] = 0;
   out_1217235508240824483[303] = 0;
   out_1217235508240824483[304] = 0;
   out_1217235508240824483[305] = 0;
   out_1217235508240824483[306] = 0;
   out_1217235508240824483[307] = 0;
   out_1217235508240824483[308] = 1;
   out_1217235508240824483[309] = 0;
   out_1217235508240824483[310] = 0;
   out_1217235508240824483[311] = 0;
   out_1217235508240824483[312] = 0;
   out_1217235508240824483[313] = 0;
   out_1217235508240824483[314] = 0;
   out_1217235508240824483[315] = 0;
   out_1217235508240824483[316] = 0;
   out_1217235508240824483[317] = 0;
   out_1217235508240824483[318] = 0;
   out_1217235508240824483[319] = 0;
   out_1217235508240824483[320] = 0;
   out_1217235508240824483[321] = 0;
   out_1217235508240824483[322] = 0;
   out_1217235508240824483[323] = 0;
   out_1217235508240824483[324] = 0;
   out_1217235508240824483[325] = 0;
   out_1217235508240824483[326] = 0;
   out_1217235508240824483[327] = 0;
   out_1217235508240824483[328] = 0;
   out_1217235508240824483[329] = 0;
   out_1217235508240824483[330] = 1;
   out_1217235508240824483[331] = 0;
   out_1217235508240824483[332] = 0;
   out_1217235508240824483[333] = 0;
   out_1217235508240824483[334] = 0;
   out_1217235508240824483[335] = 0;
   out_1217235508240824483[336] = 0;
   out_1217235508240824483[337] = 0;
   out_1217235508240824483[338] = 0;
   out_1217235508240824483[339] = 0;
   out_1217235508240824483[340] = 0;
   out_1217235508240824483[341] = 0;
   out_1217235508240824483[342] = 0;
   out_1217235508240824483[343] = 0;
   out_1217235508240824483[344] = 0;
   out_1217235508240824483[345] = 0;
   out_1217235508240824483[346] = 0;
   out_1217235508240824483[347] = 0;
   out_1217235508240824483[348] = 0;
   out_1217235508240824483[349] = 0;
   out_1217235508240824483[350] = 0;
   out_1217235508240824483[351] = 0;
   out_1217235508240824483[352] = 1;
   out_1217235508240824483[353] = 0;
   out_1217235508240824483[354] = 0;
   out_1217235508240824483[355] = 0;
   out_1217235508240824483[356] = 0;
   out_1217235508240824483[357] = 0;
   out_1217235508240824483[358] = 0;
   out_1217235508240824483[359] = 0;
   out_1217235508240824483[360] = 0;
   out_1217235508240824483[361] = 0;
   out_1217235508240824483[362] = 0;
   out_1217235508240824483[363] = 0;
   out_1217235508240824483[364] = 0;
   out_1217235508240824483[365] = 0;
   out_1217235508240824483[366] = 0;
   out_1217235508240824483[367] = 0;
   out_1217235508240824483[368] = 0;
   out_1217235508240824483[369] = 0;
   out_1217235508240824483[370] = 0;
   out_1217235508240824483[371] = 0;
   out_1217235508240824483[372] = 0;
   out_1217235508240824483[373] = 0;
   out_1217235508240824483[374] = 1;
   out_1217235508240824483[375] = 0;
   out_1217235508240824483[376] = 0;
   out_1217235508240824483[377] = 0;
   out_1217235508240824483[378] = 0;
   out_1217235508240824483[379] = 0;
   out_1217235508240824483[380] = 0;
   out_1217235508240824483[381] = 0;
   out_1217235508240824483[382] = 0;
   out_1217235508240824483[383] = 0;
   out_1217235508240824483[384] = 0;
   out_1217235508240824483[385] = 0;
   out_1217235508240824483[386] = 0;
   out_1217235508240824483[387] = 0;
   out_1217235508240824483[388] = 0;
   out_1217235508240824483[389] = 0;
   out_1217235508240824483[390] = 0;
   out_1217235508240824483[391] = 0;
   out_1217235508240824483[392] = 0;
   out_1217235508240824483[393] = 0;
   out_1217235508240824483[394] = 0;
   out_1217235508240824483[395] = 0;
   out_1217235508240824483[396] = 1;
   out_1217235508240824483[397] = 0;
   out_1217235508240824483[398] = 0;
   out_1217235508240824483[399] = 0;
   out_1217235508240824483[400] = 0;
   out_1217235508240824483[401] = 0;
   out_1217235508240824483[402] = 0;
   out_1217235508240824483[403] = 0;
   out_1217235508240824483[404] = 0;
   out_1217235508240824483[405] = 0;
   out_1217235508240824483[406] = 0;
   out_1217235508240824483[407] = 0;
   out_1217235508240824483[408] = 0;
   out_1217235508240824483[409] = 0;
   out_1217235508240824483[410] = 0;
   out_1217235508240824483[411] = 0;
   out_1217235508240824483[412] = 0;
   out_1217235508240824483[413] = 0;
   out_1217235508240824483[414] = 0;
   out_1217235508240824483[415] = 0;
   out_1217235508240824483[416] = 0;
   out_1217235508240824483[417] = 0;
   out_1217235508240824483[418] = 1;
   out_1217235508240824483[419] = 0;
   out_1217235508240824483[420] = 0;
   out_1217235508240824483[421] = 0;
   out_1217235508240824483[422] = 0;
   out_1217235508240824483[423] = 0;
   out_1217235508240824483[424] = 0;
   out_1217235508240824483[425] = 0;
   out_1217235508240824483[426] = 0;
   out_1217235508240824483[427] = 0;
   out_1217235508240824483[428] = 0;
   out_1217235508240824483[429] = 0;
   out_1217235508240824483[430] = 0;
   out_1217235508240824483[431] = 0;
   out_1217235508240824483[432] = 0;
   out_1217235508240824483[433] = 0;
   out_1217235508240824483[434] = 0;
   out_1217235508240824483[435] = 0;
   out_1217235508240824483[436] = 0;
   out_1217235508240824483[437] = 0;
   out_1217235508240824483[438] = 0;
   out_1217235508240824483[439] = 0;
   out_1217235508240824483[440] = 1;
}
void h_4(double *state, double *unused, double *out_1187195172086222192) {
   out_1187195172086222192[0] = state[10] + state[13];
   out_1187195172086222192[1] = state[11] + state[14];
   out_1187195172086222192[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2881209398931606613) {
   out_2881209398931606613[0] = 0;
   out_2881209398931606613[1] = 0;
   out_2881209398931606613[2] = 0;
   out_2881209398931606613[3] = 0;
   out_2881209398931606613[4] = 0;
   out_2881209398931606613[5] = 0;
   out_2881209398931606613[6] = 0;
   out_2881209398931606613[7] = 0;
   out_2881209398931606613[8] = 0;
   out_2881209398931606613[9] = 0;
   out_2881209398931606613[10] = 1;
   out_2881209398931606613[11] = 0;
   out_2881209398931606613[12] = 0;
   out_2881209398931606613[13] = 1;
   out_2881209398931606613[14] = 0;
   out_2881209398931606613[15] = 0;
   out_2881209398931606613[16] = 0;
   out_2881209398931606613[17] = 0;
   out_2881209398931606613[18] = 0;
   out_2881209398931606613[19] = 0;
   out_2881209398931606613[20] = 0;
   out_2881209398931606613[21] = 0;
   out_2881209398931606613[22] = 0;
   out_2881209398931606613[23] = 0;
   out_2881209398931606613[24] = 0;
   out_2881209398931606613[25] = 0;
   out_2881209398931606613[26] = 0;
   out_2881209398931606613[27] = 0;
   out_2881209398931606613[28] = 0;
   out_2881209398931606613[29] = 0;
   out_2881209398931606613[30] = 0;
   out_2881209398931606613[31] = 0;
   out_2881209398931606613[32] = 0;
   out_2881209398931606613[33] = 1;
   out_2881209398931606613[34] = 0;
   out_2881209398931606613[35] = 0;
   out_2881209398931606613[36] = 1;
   out_2881209398931606613[37] = 0;
   out_2881209398931606613[38] = 0;
   out_2881209398931606613[39] = 0;
   out_2881209398931606613[40] = 0;
   out_2881209398931606613[41] = 0;
   out_2881209398931606613[42] = 0;
   out_2881209398931606613[43] = 0;
   out_2881209398931606613[44] = 0;
   out_2881209398931606613[45] = 0;
   out_2881209398931606613[46] = 0;
   out_2881209398931606613[47] = 0;
   out_2881209398931606613[48] = 0;
   out_2881209398931606613[49] = 0;
   out_2881209398931606613[50] = 0;
   out_2881209398931606613[51] = 0;
   out_2881209398931606613[52] = 0;
   out_2881209398931606613[53] = 0;
   out_2881209398931606613[54] = 0;
   out_2881209398931606613[55] = 0;
   out_2881209398931606613[56] = 1;
   out_2881209398931606613[57] = 0;
   out_2881209398931606613[58] = 0;
   out_2881209398931606613[59] = 1;
   out_2881209398931606613[60] = 0;
   out_2881209398931606613[61] = 0;
   out_2881209398931606613[62] = 0;
   out_2881209398931606613[63] = 0;
   out_2881209398931606613[64] = 0;
   out_2881209398931606613[65] = 0;
}
void h_9(double *state, double *unused, double *out_468430767723912667) {
   out_468430767723912667[0] = state[10];
   out_468430767723912667[1] = state[11];
   out_468430767723912667[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8278315739513497533) {
   out_8278315739513497533[0] = 0;
   out_8278315739513497533[1] = 0;
   out_8278315739513497533[2] = 0;
   out_8278315739513497533[3] = 0;
   out_8278315739513497533[4] = 0;
   out_8278315739513497533[5] = 0;
   out_8278315739513497533[6] = 0;
   out_8278315739513497533[7] = 0;
   out_8278315739513497533[8] = 0;
   out_8278315739513497533[9] = 0;
   out_8278315739513497533[10] = 1;
   out_8278315739513497533[11] = 0;
   out_8278315739513497533[12] = 0;
   out_8278315739513497533[13] = 0;
   out_8278315739513497533[14] = 0;
   out_8278315739513497533[15] = 0;
   out_8278315739513497533[16] = 0;
   out_8278315739513497533[17] = 0;
   out_8278315739513497533[18] = 0;
   out_8278315739513497533[19] = 0;
   out_8278315739513497533[20] = 0;
   out_8278315739513497533[21] = 0;
   out_8278315739513497533[22] = 0;
   out_8278315739513497533[23] = 0;
   out_8278315739513497533[24] = 0;
   out_8278315739513497533[25] = 0;
   out_8278315739513497533[26] = 0;
   out_8278315739513497533[27] = 0;
   out_8278315739513497533[28] = 0;
   out_8278315739513497533[29] = 0;
   out_8278315739513497533[30] = 0;
   out_8278315739513497533[31] = 0;
   out_8278315739513497533[32] = 0;
   out_8278315739513497533[33] = 1;
   out_8278315739513497533[34] = 0;
   out_8278315739513497533[35] = 0;
   out_8278315739513497533[36] = 0;
   out_8278315739513497533[37] = 0;
   out_8278315739513497533[38] = 0;
   out_8278315739513497533[39] = 0;
   out_8278315739513497533[40] = 0;
   out_8278315739513497533[41] = 0;
   out_8278315739513497533[42] = 0;
   out_8278315739513497533[43] = 0;
   out_8278315739513497533[44] = 0;
   out_8278315739513497533[45] = 0;
   out_8278315739513497533[46] = 0;
   out_8278315739513497533[47] = 0;
   out_8278315739513497533[48] = 0;
   out_8278315739513497533[49] = 0;
   out_8278315739513497533[50] = 0;
   out_8278315739513497533[51] = 0;
   out_8278315739513497533[52] = 0;
   out_8278315739513497533[53] = 0;
   out_8278315739513497533[54] = 0;
   out_8278315739513497533[55] = 0;
   out_8278315739513497533[56] = 1;
   out_8278315739513497533[57] = 0;
   out_8278315739513497533[58] = 0;
   out_8278315739513497533[59] = 0;
   out_8278315739513497533[60] = 0;
   out_8278315739513497533[61] = 0;
   out_8278315739513497533[62] = 0;
   out_8278315739513497533[63] = 0;
   out_8278315739513497533[64] = 0;
   out_8278315739513497533[65] = 0;
}
void h_10(double *state, double *unused, double *out_7900897131025096528) {
   out_7900897131025096528[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7900897131025096528[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7900897131025096528[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_9004649023905477017) {
   out_9004649023905477017[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9004649023905477017[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9004649023905477017[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_9004649023905477017[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9004649023905477017[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9004649023905477017[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9004649023905477017[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9004649023905477017[7] = 0;
   out_9004649023905477017[8] = 0;
   out_9004649023905477017[9] = 0;
   out_9004649023905477017[10] = 0;
   out_9004649023905477017[11] = 0;
   out_9004649023905477017[12] = 0;
   out_9004649023905477017[13] = 0;
   out_9004649023905477017[14] = 0;
   out_9004649023905477017[15] = 0;
   out_9004649023905477017[16] = 1;
   out_9004649023905477017[17] = 0;
   out_9004649023905477017[18] = 0;
   out_9004649023905477017[19] = 1;
   out_9004649023905477017[20] = 0;
   out_9004649023905477017[21] = 0;
   out_9004649023905477017[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_9004649023905477017[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9004649023905477017[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_9004649023905477017[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9004649023905477017[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9004649023905477017[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9004649023905477017[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9004649023905477017[29] = 0;
   out_9004649023905477017[30] = 0;
   out_9004649023905477017[31] = 0;
   out_9004649023905477017[32] = 0;
   out_9004649023905477017[33] = 0;
   out_9004649023905477017[34] = 0;
   out_9004649023905477017[35] = 0;
   out_9004649023905477017[36] = 0;
   out_9004649023905477017[37] = 0;
   out_9004649023905477017[38] = 0;
   out_9004649023905477017[39] = 1;
   out_9004649023905477017[40] = 0;
   out_9004649023905477017[41] = 0;
   out_9004649023905477017[42] = 1;
   out_9004649023905477017[43] = 0;
   out_9004649023905477017[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_9004649023905477017[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_9004649023905477017[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9004649023905477017[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_9004649023905477017[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_9004649023905477017[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_9004649023905477017[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_9004649023905477017[51] = 0;
   out_9004649023905477017[52] = 0;
   out_9004649023905477017[53] = 0;
   out_9004649023905477017[54] = 0;
   out_9004649023905477017[55] = 0;
   out_9004649023905477017[56] = 0;
   out_9004649023905477017[57] = 0;
   out_9004649023905477017[58] = 0;
   out_9004649023905477017[59] = 0;
   out_9004649023905477017[60] = 0;
   out_9004649023905477017[61] = 0;
   out_9004649023905477017[62] = 1;
   out_9004649023905477017[63] = 0;
   out_9004649023905477017[64] = 0;
   out_9004649023905477017[65] = 1;
}
void h_12(double *state, double *unused, double *out_8041879091755035437) {
   out_8041879091755035437[0] = state[0];
   out_8041879091755035437[1] = state[1];
   out_8041879091755035437[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7900665806963568408) {
   out_7900665806963568408[0] = 1;
   out_7900665806963568408[1] = 0;
   out_7900665806963568408[2] = 0;
   out_7900665806963568408[3] = 0;
   out_7900665806963568408[4] = 0;
   out_7900665806963568408[5] = 0;
   out_7900665806963568408[6] = 0;
   out_7900665806963568408[7] = 0;
   out_7900665806963568408[8] = 0;
   out_7900665806963568408[9] = 0;
   out_7900665806963568408[10] = 0;
   out_7900665806963568408[11] = 0;
   out_7900665806963568408[12] = 0;
   out_7900665806963568408[13] = 0;
   out_7900665806963568408[14] = 0;
   out_7900665806963568408[15] = 0;
   out_7900665806963568408[16] = 0;
   out_7900665806963568408[17] = 0;
   out_7900665806963568408[18] = 0;
   out_7900665806963568408[19] = 0;
   out_7900665806963568408[20] = 0;
   out_7900665806963568408[21] = 0;
   out_7900665806963568408[22] = 0;
   out_7900665806963568408[23] = 1;
   out_7900665806963568408[24] = 0;
   out_7900665806963568408[25] = 0;
   out_7900665806963568408[26] = 0;
   out_7900665806963568408[27] = 0;
   out_7900665806963568408[28] = 0;
   out_7900665806963568408[29] = 0;
   out_7900665806963568408[30] = 0;
   out_7900665806963568408[31] = 0;
   out_7900665806963568408[32] = 0;
   out_7900665806963568408[33] = 0;
   out_7900665806963568408[34] = 0;
   out_7900665806963568408[35] = 0;
   out_7900665806963568408[36] = 0;
   out_7900665806963568408[37] = 0;
   out_7900665806963568408[38] = 0;
   out_7900665806963568408[39] = 0;
   out_7900665806963568408[40] = 0;
   out_7900665806963568408[41] = 0;
   out_7900665806963568408[42] = 0;
   out_7900665806963568408[43] = 0;
   out_7900665806963568408[44] = 0;
   out_7900665806963568408[45] = 0;
   out_7900665806963568408[46] = 1;
   out_7900665806963568408[47] = 0;
   out_7900665806963568408[48] = 0;
   out_7900665806963568408[49] = 0;
   out_7900665806963568408[50] = 0;
   out_7900665806963568408[51] = 0;
   out_7900665806963568408[52] = 0;
   out_7900665806963568408[53] = 0;
   out_7900665806963568408[54] = 0;
   out_7900665806963568408[55] = 0;
   out_7900665806963568408[56] = 0;
   out_7900665806963568408[57] = 0;
   out_7900665806963568408[58] = 0;
   out_7900665806963568408[59] = 0;
   out_7900665806963568408[60] = 0;
   out_7900665806963568408[61] = 0;
   out_7900665806963568408[62] = 0;
   out_7900665806963568408[63] = 0;
   out_7900665806963568408[64] = 0;
   out_7900665806963568408[65] = 0;
}
void h_31(double *state, double *unused, double *out_7319727340276679641) {
   out_7319727340276679641[0] = state[7];
   out_7319727340276679641[1] = state[8];
   out_7319727340276679641[2] = state[9];
}
void H_31(double *state, double *unused, double *out_6247871456304213989) {
   out_6247871456304213989[0] = 0;
   out_6247871456304213989[1] = 0;
   out_6247871456304213989[2] = 0;
   out_6247871456304213989[3] = 0;
   out_6247871456304213989[4] = 0;
   out_6247871456304213989[5] = 0;
   out_6247871456304213989[6] = 0;
   out_6247871456304213989[7] = 1;
   out_6247871456304213989[8] = 0;
   out_6247871456304213989[9] = 0;
   out_6247871456304213989[10] = 0;
   out_6247871456304213989[11] = 0;
   out_6247871456304213989[12] = 0;
   out_6247871456304213989[13] = 0;
   out_6247871456304213989[14] = 0;
   out_6247871456304213989[15] = 0;
   out_6247871456304213989[16] = 0;
   out_6247871456304213989[17] = 0;
   out_6247871456304213989[18] = 0;
   out_6247871456304213989[19] = 0;
   out_6247871456304213989[20] = 0;
   out_6247871456304213989[21] = 0;
   out_6247871456304213989[22] = 0;
   out_6247871456304213989[23] = 0;
   out_6247871456304213989[24] = 0;
   out_6247871456304213989[25] = 0;
   out_6247871456304213989[26] = 0;
   out_6247871456304213989[27] = 0;
   out_6247871456304213989[28] = 0;
   out_6247871456304213989[29] = 0;
   out_6247871456304213989[30] = 1;
   out_6247871456304213989[31] = 0;
   out_6247871456304213989[32] = 0;
   out_6247871456304213989[33] = 0;
   out_6247871456304213989[34] = 0;
   out_6247871456304213989[35] = 0;
   out_6247871456304213989[36] = 0;
   out_6247871456304213989[37] = 0;
   out_6247871456304213989[38] = 0;
   out_6247871456304213989[39] = 0;
   out_6247871456304213989[40] = 0;
   out_6247871456304213989[41] = 0;
   out_6247871456304213989[42] = 0;
   out_6247871456304213989[43] = 0;
   out_6247871456304213989[44] = 0;
   out_6247871456304213989[45] = 0;
   out_6247871456304213989[46] = 0;
   out_6247871456304213989[47] = 0;
   out_6247871456304213989[48] = 0;
   out_6247871456304213989[49] = 0;
   out_6247871456304213989[50] = 0;
   out_6247871456304213989[51] = 0;
   out_6247871456304213989[52] = 0;
   out_6247871456304213989[53] = 1;
   out_6247871456304213989[54] = 0;
   out_6247871456304213989[55] = 0;
   out_6247871456304213989[56] = 0;
   out_6247871456304213989[57] = 0;
   out_6247871456304213989[58] = 0;
   out_6247871456304213989[59] = 0;
   out_6247871456304213989[60] = 0;
   out_6247871456304213989[61] = 0;
   out_6247871456304213989[62] = 0;
   out_6247871456304213989[63] = 0;
   out_6247871456304213989[64] = 0;
   out_6247871456304213989[65] = 0;
}
void h_32(double *state, double *unused, double *out_4286017220412784756) {
   out_4286017220412784756[0] = state[3];
   out_4286017220412784756[1] = state[4];
   out_4286017220412784756[2] = state[5];
   out_4286017220412784756[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7759747416440127621) {
   out_7759747416440127621[0] = 0;
   out_7759747416440127621[1] = 0;
   out_7759747416440127621[2] = 0;
   out_7759747416440127621[3] = 1;
   out_7759747416440127621[4] = 0;
   out_7759747416440127621[5] = 0;
   out_7759747416440127621[6] = 0;
   out_7759747416440127621[7] = 0;
   out_7759747416440127621[8] = 0;
   out_7759747416440127621[9] = 0;
   out_7759747416440127621[10] = 0;
   out_7759747416440127621[11] = 0;
   out_7759747416440127621[12] = 0;
   out_7759747416440127621[13] = 0;
   out_7759747416440127621[14] = 0;
   out_7759747416440127621[15] = 0;
   out_7759747416440127621[16] = 0;
   out_7759747416440127621[17] = 0;
   out_7759747416440127621[18] = 0;
   out_7759747416440127621[19] = 0;
   out_7759747416440127621[20] = 0;
   out_7759747416440127621[21] = 0;
   out_7759747416440127621[22] = 0;
   out_7759747416440127621[23] = 0;
   out_7759747416440127621[24] = 0;
   out_7759747416440127621[25] = 0;
   out_7759747416440127621[26] = 1;
   out_7759747416440127621[27] = 0;
   out_7759747416440127621[28] = 0;
   out_7759747416440127621[29] = 0;
   out_7759747416440127621[30] = 0;
   out_7759747416440127621[31] = 0;
   out_7759747416440127621[32] = 0;
   out_7759747416440127621[33] = 0;
   out_7759747416440127621[34] = 0;
   out_7759747416440127621[35] = 0;
   out_7759747416440127621[36] = 0;
   out_7759747416440127621[37] = 0;
   out_7759747416440127621[38] = 0;
   out_7759747416440127621[39] = 0;
   out_7759747416440127621[40] = 0;
   out_7759747416440127621[41] = 0;
   out_7759747416440127621[42] = 0;
   out_7759747416440127621[43] = 0;
   out_7759747416440127621[44] = 0;
   out_7759747416440127621[45] = 0;
   out_7759747416440127621[46] = 0;
   out_7759747416440127621[47] = 0;
   out_7759747416440127621[48] = 0;
   out_7759747416440127621[49] = 1;
   out_7759747416440127621[50] = 0;
   out_7759747416440127621[51] = 0;
   out_7759747416440127621[52] = 0;
   out_7759747416440127621[53] = 0;
   out_7759747416440127621[54] = 0;
   out_7759747416440127621[55] = 0;
   out_7759747416440127621[56] = 0;
   out_7759747416440127621[57] = 0;
   out_7759747416440127621[58] = 0;
   out_7759747416440127621[59] = 0;
   out_7759747416440127621[60] = 0;
   out_7759747416440127621[61] = 0;
   out_7759747416440127621[62] = 0;
   out_7759747416440127621[63] = 0;
   out_7759747416440127621[64] = 0;
   out_7759747416440127621[65] = 0;
   out_7759747416440127621[66] = 0;
   out_7759747416440127621[67] = 0;
   out_7759747416440127621[68] = 0;
   out_7759747416440127621[69] = 0;
   out_7759747416440127621[70] = 0;
   out_7759747416440127621[71] = 0;
   out_7759747416440127621[72] = 1;
   out_7759747416440127621[73] = 0;
   out_7759747416440127621[74] = 0;
   out_7759747416440127621[75] = 0;
   out_7759747416440127621[76] = 0;
   out_7759747416440127621[77] = 0;
   out_7759747416440127621[78] = 0;
   out_7759747416440127621[79] = 0;
   out_7759747416440127621[80] = 0;
   out_7759747416440127621[81] = 0;
   out_7759747416440127621[82] = 0;
   out_7759747416440127621[83] = 0;
   out_7759747416440127621[84] = 0;
   out_7759747416440127621[85] = 0;
   out_7759747416440127621[86] = 0;
   out_7759747416440127621[87] = 0;
}
void h_13(double *state, double *unused, double *out_7905065231247966384) {
   out_7905065231247966384[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7905065231247966384[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7905065231247966384[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3633141697491679160) {
   out_3633141697491679160[0] = 0;
   out_3633141697491679160[1] = 0;
   out_3633141697491679160[2] = 0;
   out_3633141697491679160[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3633141697491679160[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3633141697491679160[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3633141697491679160[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3633141697491679160[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3633141697491679160[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3633141697491679160[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3633141697491679160[10] = 0;
   out_3633141697491679160[11] = 0;
   out_3633141697491679160[12] = 0;
   out_3633141697491679160[13] = 0;
   out_3633141697491679160[14] = 0;
   out_3633141697491679160[15] = 0;
   out_3633141697491679160[16] = 0;
   out_3633141697491679160[17] = 0;
   out_3633141697491679160[18] = 0;
   out_3633141697491679160[19] = 0;
   out_3633141697491679160[20] = 0;
   out_3633141697491679160[21] = 0;
   out_3633141697491679160[22] = 0;
   out_3633141697491679160[23] = 0;
   out_3633141697491679160[24] = 0;
   out_3633141697491679160[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3633141697491679160[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3633141697491679160[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3633141697491679160[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3633141697491679160[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3633141697491679160[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3633141697491679160[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3633141697491679160[32] = 0;
   out_3633141697491679160[33] = 0;
   out_3633141697491679160[34] = 0;
   out_3633141697491679160[35] = 0;
   out_3633141697491679160[36] = 0;
   out_3633141697491679160[37] = 0;
   out_3633141697491679160[38] = 0;
   out_3633141697491679160[39] = 0;
   out_3633141697491679160[40] = 0;
   out_3633141697491679160[41] = 0;
   out_3633141697491679160[42] = 0;
   out_3633141697491679160[43] = 0;
   out_3633141697491679160[44] = 0;
   out_3633141697491679160[45] = 0;
   out_3633141697491679160[46] = 0;
   out_3633141697491679160[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3633141697491679160[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3633141697491679160[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3633141697491679160[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3633141697491679160[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3633141697491679160[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3633141697491679160[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3633141697491679160[54] = 0;
   out_3633141697491679160[55] = 0;
   out_3633141697491679160[56] = 0;
   out_3633141697491679160[57] = 0;
   out_3633141697491679160[58] = 0;
   out_3633141697491679160[59] = 0;
   out_3633141697491679160[60] = 0;
   out_3633141697491679160[61] = 0;
   out_3633141697491679160[62] = 0;
   out_3633141697491679160[63] = 0;
   out_3633141697491679160[64] = 0;
   out_3633141697491679160[65] = 0;
}
void h_14(double *state, double *unused, double *out_468430767723912667) {
   out_468430767723912667[0] = state[10];
   out_468430767723912667[1] = state[11];
   out_468430767723912667[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8278315739513497533) {
   out_8278315739513497533[0] = 0;
   out_8278315739513497533[1] = 0;
   out_8278315739513497533[2] = 0;
   out_8278315739513497533[3] = 0;
   out_8278315739513497533[4] = 0;
   out_8278315739513497533[5] = 0;
   out_8278315739513497533[6] = 0;
   out_8278315739513497533[7] = 0;
   out_8278315739513497533[8] = 0;
   out_8278315739513497533[9] = 0;
   out_8278315739513497533[10] = 1;
   out_8278315739513497533[11] = 0;
   out_8278315739513497533[12] = 0;
   out_8278315739513497533[13] = 0;
   out_8278315739513497533[14] = 0;
   out_8278315739513497533[15] = 0;
   out_8278315739513497533[16] = 0;
   out_8278315739513497533[17] = 0;
   out_8278315739513497533[18] = 0;
   out_8278315739513497533[19] = 0;
   out_8278315739513497533[20] = 0;
   out_8278315739513497533[21] = 0;
   out_8278315739513497533[22] = 0;
   out_8278315739513497533[23] = 0;
   out_8278315739513497533[24] = 0;
   out_8278315739513497533[25] = 0;
   out_8278315739513497533[26] = 0;
   out_8278315739513497533[27] = 0;
   out_8278315739513497533[28] = 0;
   out_8278315739513497533[29] = 0;
   out_8278315739513497533[30] = 0;
   out_8278315739513497533[31] = 0;
   out_8278315739513497533[32] = 0;
   out_8278315739513497533[33] = 1;
   out_8278315739513497533[34] = 0;
   out_8278315739513497533[35] = 0;
   out_8278315739513497533[36] = 0;
   out_8278315739513497533[37] = 0;
   out_8278315739513497533[38] = 0;
   out_8278315739513497533[39] = 0;
   out_8278315739513497533[40] = 0;
   out_8278315739513497533[41] = 0;
   out_8278315739513497533[42] = 0;
   out_8278315739513497533[43] = 0;
   out_8278315739513497533[44] = 0;
   out_8278315739513497533[45] = 0;
   out_8278315739513497533[46] = 0;
   out_8278315739513497533[47] = 0;
   out_8278315739513497533[48] = 0;
   out_8278315739513497533[49] = 0;
   out_8278315739513497533[50] = 0;
   out_8278315739513497533[51] = 0;
   out_8278315739513497533[52] = 0;
   out_8278315739513497533[53] = 0;
   out_8278315739513497533[54] = 0;
   out_8278315739513497533[55] = 0;
   out_8278315739513497533[56] = 1;
   out_8278315739513497533[57] = 0;
   out_8278315739513497533[58] = 0;
   out_8278315739513497533[59] = 0;
   out_8278315739513497533[60] = 0;
   out_8278315739513497533[61] = 0;
   out_8278315739513497533[62] = 0;
   out_8278315739513497533[63] = 0;
   out_8278315739513497533[64] = 0;
   out_8278315739513497533[65] = 0;
}
void h_33(double *state, double *unused, double *out_524656203599624517) {
   out_524656203599624517[0] = state[16];
   out_524656203599624517[1] = state[17];
   out_524656203599624517[2] = state[18];
}
void H_33(double *state, double *unused, double *out_9048315612766480023) {
   out_9048315612766480023[0] = 0;
   out_9048315612766480023[1] = 0;
   out_9048315612766480023[2] = 0;
   out_9048315612766480023[3] = 0;
   out_9048315612766480023[4] = 0;
   out_9048315612766480023[5] = 0;
   out_9048315612766480023[6] = 0;
   out_9048315612766480023[7] = 0;
   out_9048315612766480023[8] = 0;
   out_9048315612766480023[9] = 0;
   out_9048315612766480023[10] = 0;
   out_9048315612766480023[11] = 0;
   out_9048315612766480023[12] = 0;
   out_9048315612766480023[13] = 0;
   out_9048315612766480023[14] = 0;
   out_9048315612766480023[15] = 0;
   out_9048315612766480023[16] = 1;
   out_9048315612766480023[17] = 0;
   out_9048315612766480023[18] = 0;
   out_9048315612766480023[19] = 0;
   out_9048315612766480023[20] = 0;
   out_9048315612766480023[21] = 0;
   out_9048315612766480023[22] = 0;
   out_9048315612766480023[23] = 0;
   out_9048315612766480023[24] = 0;
   out_9048315612766480023[25] = 0;
   out_9048315612766480023[26] = 0;
   out_9048315612766480023[27] = 0;
   out_9048315612766480023[28] = 0;
   out_9048315612766480023[29] = 0;
   out_9048315612766480023[30] = 0;
   out_9048315612766480023[31] = 0;
   out_9048315612766480023[32] = 0;
   out_9048315612766480023[33] = 0;
   out_9048315612766480023[34] = 0;
   out_9048315612766480023[35] = 0;
   out_9048315612766480023[36] = 0;
   out_9048315612766480023[37] = 0;
   out_9048315612766480023[38] = 0;
   out_9048315612766480023[39] = 1;
   out_9048315612766480023[40] = 0;
   out_9048315612766480023[41] = 0;
   out_9048315612766480023[42] = 0;
   out_9048315612766480023[43] = 0;
   out_9048315612766480023[44] = 0;
   out_9048315612766480023[45] = 0;
   out_9048315612766480023[46] = 0;
   out_9048315612766480023[47] = 0;
   out_9048315612766480023[48] = 0;
   out_9048315612766480023[49] = 0;
   out_9048315612766480023[50] = 0;
   out_9048315612766480023[51] = 0;
   out_9048315612766480023[52] = 0;
   out_9048315612766480023[53] = 0;
   out_9048315612766480023[54] = 0;
   out_9048315612766480023[55] = 0;
   out_9048315612766480023[56] = 0;
   out_9048315612766480023[57] = 0;
   out_9048315612766480023[58] = 0;
   out_9048315612766480023[59] = 0;
   out_9048315612766480023[60] = 0;
   out_9048315612766480023[61] = 0;
   out_9048315612766480023[62] = 1;
   out_9048315612766480023[63] = 0;
   out_9048315612766480023[64] = 0;
   out_9048315612766480023[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4341031410396474634) {
  H(in_vec, out_4341031410396474634);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4797538582936705820) {
  err_fun(nom_x, delta_x, out_4797538582936705820);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8826134262153630586) {
  inv_err_fun(nom_x, true_x, out_8826134262153630586);
}
void live_H_mod_fun(double *state, double *out_6756890915510285479) {
  H_mod_fun(state, out_6756890915510285479);
}
void live_f_fun(double *state, double dt, double *out_1045568842516687553) {
  f_fun(state,  dt, out_1045568842516687553);
}
void live_F_fun(double *state, double dt, double *out_1217235508240824483) {
  F_fun(state,  dt, out_1217235508240824483);
}
void live_h_4(double *state, double *unused, double *out_1187195172086222192) {
  h_4(state, unused, out_1187195172086222192);
}
void live_H_4(double *state, double *unused, double *out_2881209398931606613) {
  H_4(state, unused, out_2881209398931606613);
}
void live_h_9(double *state, double *unused, double *out_468430767723912667) {
  h_9(state, unused, out_468430767723912667);
}
void live_H_9(double *state, double *unused, double *out_8278315739513497533) {
  H_9(state, unused, out_8278315739513497533);
}
void live_h_10(double *state, double *unused, double *out_7900897131025096528) {
  h_10(state, unused, out_7900897131025096528);
}
void live_H_10(double *state, double *unused, double *out_9004649023905477017) {
  H_10(state, unused, out_9004649023905477017);
}
void live_h_12(double *state, double *unused, double *out_8041879091755035437) {
  h_12(state, unused, out_8041879091755035437);
}
void live_H_12(double *state, double *unused, double *out_7900665806963568408) {
  H_12(state, unused, out_7900665806963568408);
}
void live_h_31(double *state, double *unused, double *out_7319727340276679641) {
  h_31(state, unused, out_7319727340276679641);
}
void live_H_31(double *state, double *unused, double *out_6247871456304213989) {
  H_31(state, unused, out_6247871456304213989);
}
void live_h_32(double *state, double *unused, double *out_4286017220412784756) {
  h_32(state, unused, out_4286017220412784756);
}
void live_H_32(double *state, double *unused, double *out_7759747416440127621) {
  H_32(state, unused, out_7759747416440127621);
}
void live_h_13(double *state, double *unused, double *out_7905065231247966384) {
  h_13(state, unused, out_7905065231247966384);
}
void live_H_13(double *state, double *unused, double *out_3633141697491679160) {
  H_13(state, unused, out_3633141697491679160);
}
void live_h_14(double *state, double *unused, double *out_468430767723912667) {
  h_14(state, unused, out_468430767723912667);
}
void live_H_14(double *state, double *unused, double *out_8278315739513497533) {
  H_14(state, unused, out_8278315739513497533);
}
void live_h_33(double *state, double *unused, double *out_524656203599624517) {
  h_33(state, unused, out_524656203599624517);
}
void live_H_33(double *state, double *unused, double *out_9048315612766480023) {
  H_33(state, unused, out_9048315612766480023);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
